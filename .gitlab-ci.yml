# File is based on https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/dotNET-Core.gitlab-ci.yml
# Other .NET Core images: https://hub.docker.com/_/microsoft-dotnet
image: mcr.microsoft.com/dotnet/sdk:latest

variables:
  COLLECTIVE_DEPLOYMENT_DIRECTORY: GitLabDeployments/
  DEPLOYMENT_DIRECTORY: $COLLECTIVE_DEPLOYMENT_DIRECTORY$CI_PROJECT_NAME
  OBJECTS_DIRECTORY: obj/
  NUGET_PACKAGES_DIRECTORY: .nuget/
  OUTPUT_DIRECTORY: build_output/

stages:
  - build
  - deploy

workflow:
  rules:
    - if: $CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH == "main"
      when: always
    - when: never

build:
  stage: build
  script:
    - ls -R
    - PROJECT_FILE=$(find . -name '*.csproj' -maxdepth 2 | head -n 1)
    - echo $PROJECT_FILE
    - dotnet publish "$PROJECT_FILE" -o $OUTPUT_DIRECTORY
  artifacts:
    paths:
      - $OUTPUT_DIRECTORY
  
cache:
  # Per-stage and per-branch caching.
  key: $CI_JOB_STAGE-$CI_COMMIT_REF_SLUG
  paths:
    # Specify three paths that should be cached:
    # 1) Main JSON file holding information about package dependency tree, packages versions,
    # frameworks etc. It also holds information where to the dependencies were restored.
    - $PROJECT_FILE$OBJECTS_DIRECTORYproject.assets.json
    # 2) Other NuGet and MSBuild related files. Also needed.
    - $PROJECT_FILE$OBJECTS_DIRECTORY*.csproj.nuget.*
    # 3) Path to the directory where restored dependencies are kept.
    - $NUGET_PACKAGES_DIRECTORY

deploy:
  stage: deploy
  needs: [build]
  script:
    - apt-get update && apt install smbclient -y
    - cd $OUTPUT_DIRECTORY
    - ls -R
    - smbclient //emp-intranet01/emp-cms/ -U "EMP/Felix Kreuzberger%$SMB_PASSWORD" -c "mkdir $COLLECTIVE_DEPLOYMENT_DIRECTORY;mkdir $DEPLOYMENT_DIRECTORY"
    - smbclient //emp-intranet01/emp-cms/ -U "EMP/Felix Kreuzberger%$SMB_PASSWORD" -c "cd $DEPLOYMENT_DIRECTORY;prompt OFF;mput *"
